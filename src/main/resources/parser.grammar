%header%

GRAMMARTYPE = "LL"

DESCRIPTION = "A grammar for a simple arithmetic language."

AUTHOR      = "BAR"
VERSION     = "1.0"
DATE        = "20 February 2022"

LICENSE     = "Permission is granted to copy this document verbatim in any
               medium, provided that this copyright notice is left intact."

COPYRIGHT   = "Copyright (c). All rights reserved."


%tokens%

ATTR_LP                     = "("
ATTR_RP                     = ")"
TAG_LP                      = "<"
TAG_RP                      = ">"
TAG_LN                      = "<-"
BLK_LP                      = "<<"
BLK_RP                      = ">>"
IS                          = "="
DOT                         = "\."
QUOTE                       = <<">>
//NOT_QUOTE                   = <<[^"]*>>
//NOT_BLK_P                   = "[^<>]*"
SPEC                        = <<.\([^ )]+\)>>
//SNG_TAG                     = "[^ ]+\."
//NUMBER                      = <<[0-9]+>>
ATOM                        = <<[^ \t\n\r<>"=]+>>
WHITESPACE                  = <<[ \t\n\r]>> %ignore%
SPACE                       = " \t"

%productions%

//Go = Multiline [Go] ;

Go = ATOMS;
//Go = Attr [Go];

//AttrFlag = ATOM ;

ATOMS = ATOM [ATOMS] ;

AttrPair = ATOM IS ( ATOM | QUOTE ATOMS QUOTE ) ;

Attr = ATOM | AttrPair ;

//Attrs = ATTR_LP Attr {Attr} ATTR_RP ;

//Tag = SNG_TAG | ATOM [Attrs] ;

BlockCont = (SPEC | ATOM) [BlockCont] ;

Multiline = BLK_LP BlockCont BLK_RP ;