%header%

GRAMMARTYPE = "LL"

DESCRIPTION = "A grammar for a simple arithmetic language."

AUTHOR      = "BAR"
VERSION     = "1.0"
DATE        = "20 February 2022"

LICENSE     = "Permission is granted to copy this document verbatim in any
               medium, provided that this copyright notice is left intact."

COPYRIGHT   = "Copyright (c). All rights reserved."


%tokens%

WHITESPACE     = <<[ \t\n\r]>> %ignore%
ATTRS_OPEN     = "("
ATTRS_CLOSE    = ")"
TAG_OPEN       = "<"
TAG_CLOSE      = ">"
LINE_TAG       = "<-"
SPEC           = <<\.\([a-zA-Z0-9_]+\)>>
BLOCK_OPEN     = "<<"
BLOCK_CLOSE    = ">>"
ATOM           = <<[a-zA-Z_][a-zA-Z0-9_]*>>
ATTR_STR       = <<"[^"]*">>
IS             = "="

%productions%

Go = Attrs [Go] ;

Attr           = ATOM | ATOM IS ATOM | ATOM IS ATTR_STR;
Attrs          = ATTRS_OPEN Attr+ ATTRS_CLOSE;  
 
//Attrs = ATTR_LP Attr {Attr} ATTR_RP ;

//Tag = SNG_TAG | ATOM [Attrs] ;

//BlockCont = (SPEC | ATOM) [BlockCont] ;

//Multiline = BLK_LP BlockCont BLK_RP ;